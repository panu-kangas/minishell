NOT DONE:

Timo:

- Quote handling (remove quotes from commands, args and files, EXCEPT here_doc limiter)
- Remove quotes from files (example: > "file 1" should create a file named file 1, so no quotes)
- Handle $?
- Env_var expansions with quotes: $PATH expands, "$PATH" expands, '$PATH' does not
- Env_var expansions with redirect --> Read QUESTIONS-part below for more info
- Env_var expansions with blank spaces
	--> Example:				bash-3.2$ export PANU="   jee    jee    jee   "		--> value has blank spaces
								bash-3.2$ env | grep PANU
								PANU=   jee    jee    jee							--> They are stored in env_list
								bash-3.2$ echo $PANU
								jee jee jee											--> BUT they are trimmed away when expanding
								bash-3.2$ echo "$PANU"
								jee    jee    jee 									--> EXCEPT if the env_var is inside double quotation


Panu:

- List of test cases (Panu can start doing this)


NEEDS FIXING:

Timo:

- rl_clear_history in the end of program (and in exit function also) ??
- Unclosed quot: error or let it be? Fix error message?
- Minishell: echo hello | --> should have some sort of syntax error
- Minishell: | --> solo pipe sign could maybe be a syntax error ?
- Edge-case of redirect			bash-3.2$ >""
								bash: : No such file or directory
- Minishell: echo hello>file1 --> should be parsed to echo hello > file1, now it echoes "hello>file1"
- Edge-case for parsing			bash-3.2$ file1<cat 	
								bash: cat: No such file or directory	--> our minishell says "minishell: file1<cat: command not found"

Panu:

- HD: Move heredoc out of child processes!! Because SIGINT in a heredoc should stop the whole pipeline (example <<EOF cat | ls)
- HD: Here_doc env_var expanding (Panu)
- HD: implement also EOF vs "EOF"
- Non global env var --> if command has = and there are no args, process_non_global_env_var
	--> Additionally: You can change global env var value without export!!!! So after export TEST=testi, you can just say TEST=festi, and it changes
- Fix pwd: if folder has been removed, behaviour is different. Check bash (and notes in .c file)
- export "PANU"=jee --> quotes get trimmed
- Double check signal handling with a single built-in (so for things that happens inside the parent process)

?? HD: Travelling cursor, when termios is altered --> FIXED, just needs testing when quot parsing is done 

?? Check SHLVL edge case values (int_min, int_max, negative)
	--> if SHLVL is >= INT_MAX but <= LONG_MAX, new shell has SHLVL value 0 (no error)
	--> if SHLVL is > LONG_MAX, new shell has SHLVL value 1 (no error)
	--> Okay, this is VERY complicated and I think also unnecessary... might just give up :D

	--> if SHLVL == 1000 when starting shell, the value is empty (SHLVL=)
	--> if SHLVL is > 1000 and < INT_MAX when starting shell, we get error message:
		bash: warning: shell level (1001) too high, resetting to 1 
		(tested with 1001 as start value)

	--> One option is to implement the error messsage and some generic value (0 or 1) if you have a weird value



XX HD: Minishell: <extra.c << EOF cat | grep helo --> When stopped with SIGINT, minishell produces an extra NL for some reason
XX SHLVL --> do SHLVL++ in save_env_lst
XX Unset doesn't work on _=/usr/bin/env 
XX declare -x _="./a.out" --> this can be seen with env, but not with export
XX Exit-built_in arguments: check int_max, int_min , negative etc



QUESTIONS:

- Handling special characters: is this ok at the moment? We should handle them always or not at all, I think.
- How to handle this? 	bash-3.2$ echo hello2 >$NOT_EXISTING 	--> Maybe in parsing? If filename is $something, exit_code is 1 and write "ambiguous redirect"
						bash: $NOT_EXISTING: ambiguous redirect		--> This same also works with NOT_EXISTING=, so with env_var that has value of '\0'

						BUT THIS WORKS
						bash-3.2$ ls >$?	--> so exit code is expanded no matter what

- How to handle this?	bash-3.2$ export PANU=>file1 --> this is actually same as "export PANU= >file1", so a matter of parsing
						bash-3.2$ echo hello $PANU

- Special case of 2>file1 (redirecting standard error) --> should we handle this? If yes, how?

CHECK THESE:

- single and double quotations won't show in env-listed value. I mean:  export TEST='hello world' --> TEST=hello world in variable list (wth env-command)
- export PATH=$PATH:something
- Panu: is OS given PATH superior to user given path? Or does it execute the first path it finds (example: ls-executable in work folder, work folder added to PATH)
- lsof -c minishell